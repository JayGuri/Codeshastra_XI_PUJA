"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/CesiumGlobe.jsx":
/*!************************************!*\
  !*** ./components/CesiumGlobe.jsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CesiumGlobe)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction CesiumGlobe() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CesiumGlobe.useEffect\": ()=>{\n            // Make sure Cesium is loaded\n            if ( false || !window.Cesium) {\n                console.error(\"Cesium is not loaded\");\n                return;\n            }\n            const Cesium = window.Cesium;\n            // Your Cesium token should be set here\n            Cesium.Ion.defaultAccessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlMDU5NTMxOC0zNWFlLTQzZGUtOGJiYy0wYWQwY2ZiZDljNDYiLCJpZCI6MjkxMDY2LCJpYXQiOjE3NDM4MzkyMTV9.LPvRbUhDWM-Q4w3ALnV4G74fGNiHqFVBWN8iCU1AvVA\";\n            // Initialize the Cesium viewer\n            const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n                terrain: Cesium.Terrain.fromWorldTerrain(),\n                animation: false,\n                baseLayerPicker: false,\n                fullscreenButton: false,\n                geocoder: false,\n                homeButton: false,\n                infoBox: false,\n                sceneModePicker: false,\n                selectionIndicator: false,\n                timeline: false,\n                navigationHelpButton: false,\n                navigationInstructionsInitiallyVisible: false,\n                imageryProvider: new Cesium.IonImageryProvider({\n                    assetId: 3\n                })\n            });\n            // Remove the Cesium logo and credits container\n            viewer.cesiumWidget.creditContainer.style.display = \"none\";\n            // Set the initial camera to look at Earth\n            viewer.scene.camera.setView({\n                destination: Cesium.Cartesian3.fromDegrees(10.0, 45.0, 10000000.0),\n                orientation: {\n                    heading: Cesium.Math.toRadians(0),\n                    pitch: Cesium.Math.toRadians(-90)\n                }\n            });\n            // Add Cesium OSM buildings to the scene\n            async function addOsmBuildings() {\n                try {\n                    const osmBuildingsTileset = await Cesium.createOsmBuildingsAsync();\n                    viewer.scene.primitives.add(osmBuildingsTileset);\n                } catch (error) {\n                    console.error(\"Error loading OSM Buildings:\", error);\n                }\n            }\n            addOsmBuildings();\n            // Add auto-rotation for the globe\n            viewer.clock.onTick.addEventListener({\n                \"CesiumGlobe.useEffect\": ()=>{\n                    viewer.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, 0.0005);\n                }\n            }[\"CesiumGlobe.useEffect\"]);\n            // Cleanup function\n            return ({\n                \"CesiumGlobe.useEffect\": ()=>{\n                    if (viewer && !viewer.isDestroyed()) {\n                        viewer.destroy();\n                    }\n                }\n            })[\"CesiumGlobe.useEffect\"];\n        }\n    }[\"CesiumGlobe.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"cesiumContainer\",\n        style: {\n            width: \"100%\",\n            height: \"100vh\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Jay Manish Guri\\\\OneDrive\\\\Desktop\\\\pujacs\\\\frontend\\\\components\\\\CesiumGlobe.jsx\",\n        lineNumber: 72,\n        columnNumber: 10\n    }, this);\n}\n_s(CesiumGlobe, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CesiumGlobe;\nvar _c;\n$RefreshReg$(_c, \"CesiumGlobe\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvQ2VzaXVtR2xvYmUuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVpQztBQUVsQixTQUFTQzs7SUFDdEJELGdEQUFTQTtpQ0FBQztZQUNSLDZCQUE2QjtZQUM3QixJQUFJLE1BQTZCLElBQUksQ0FBQ0UsT0FBT0MsTUFBTSxFQUFFO2dCQUNuREMsUUFBUUMsS0FBSyxDQUFDO2dCQUNkO1lBQ0Y7WUFFQSxNQUFNRixTQUFTRCxPQUFPQyxNQUFNO1lBRTVCLHVDQUF1QztZQUN2Q0EsT0FBT0csR0FBRyxDQUFDQyxrQkFBa0IsR0FDM0I7WUFDRiwrQkFBK0I7WUFDL0IsTUFBTUMsU0FBUyxJQUFJTCxPQUFPTSxNQUFNLENBQUMsbUJBQW1CO2dCQUNsREMsU0FBU1AsT0FBT1EsT0FBTyxDQUFDQyxnQkFBZ0I7Z0JBQ3hDQyxXQUFXO2dCQUNYQyxpQkFBaUI7Z0JBQ2pCQyxrQkFBa0I7Z0JBQ2xCQyxVQUFVO2dCQUNWQyxZQUFZO2dCQUNaQyxTQUFTO2dCQUNUQyxpQkFBaUI7Z0JBQ2pCQyxvQkFBb0I7Z0JBQ3BCQyxVQUFVO2dCQUNWQyxzQkFBc0I7Z0JBQ3RCQyx3Q0FBd0M7Z0JBQ3hDQyxpQkFBaUIsSUFBSXJCLE9BQU9zQixrQkFBa0IsQ0FBQztvQkFBRUMsU0FBUztnQkFBRTtZQUM5RDtZQUVBLCtDQUErQztZQUMvQ2xCLE9BQU9tQixZQUFZLENBQUNDLGVBQWUsQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLEdBQUc7WUFFcEQsMENBQTBDO1lBQzFDdEIsT0FBT3VCLEtBQUssQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQUM7Z0JBQzFCQyxhQUFhL0IsT0FBT2dDLFVBQVUsQ0FBQ0MsV0FBVyxDQUFDLE1BQU0sTUFBTTtnQkFDdkRDLGFBQWE7b0JBQ1hDLFNBQVNuQyxPQUFPb0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7b0JBQy9CQyxPQUFPdEMsT0FBT29DLElBQUksQ0FBQ0MsU0FBUyxDQUFDLENBQUM7Z0JBQ2hDO1lBQ0Y7WUFFQSx3Q0FBd0M7WUFDeEMsZUFBZUU7Z0JBQ2IsSUFBSTtvQkFDRixNQUFNQyxzQkFBc0IsTUFBTXhDLE9BQU95Qyx1QkFBdUI7b0JBQ2hFcEMsT0FBT3VCLEtBQUssQ0FBQ2MsVUFBVSxDQUFDQyxHQUFHLENBQUNIO2dCQUM5QixFQUFFLE9BQU90QyxPQUFPO29CQUNkRCxRQUFRQyxLQUFLLENBQUMsZ0NBQWdDQTtnQkFDaEQ7WUFDRjtZQUVBcUM7WUFFQSxrQ0FBa0M7WUFDbENsQyxPQUFPdUMsS0FBSyxDQUFDQyxNQUFNLENBQUNDLGdCQUFnQjt5Q0FBQztvQkFDbkN6QyxPQUFPdUIsS0FBSyxDQUFDQyxNQUFNLENBQUNrQixNQUFNLENBQUMvQyxPQUFPZ0MsVUFBVSxDQUFDZ0IsTUFBTSxFQUFFO2dCQUN2RDs7WUFFQSxtQkFBbUI7WUFDbkI7eUNBQU87b0JBQ0wsSUFBSTNDLFVBQVUsQ0FBQ0EsT0FBTzRDLFdBQVcsSUFBSTt3QkFDbkM1QyxPQUFPNkMsT0FBTztvQkFDaEI7Z0JBQ0Y7O1FBQ0Y7Z0NBQUcsRUFBRTtJQUVMLHFCQUFPLDhEQUFDQztRQUFJQyxJQUFHO1FBQWtCMUIsT0FBTztZQUFFMkIsT0FBTztZQUFRQyxRQUFRO1FBQVE7Ozs7OztBQUMzRTtHQXBFd0J4RDtLQUFBQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxKYXkgTWFuaXNoIEd1cmlcXE9uZURyaXZlXFxEZXNrdG9wXFxwdWphY3NcXGZyb250ZW5kXFxjb21wb25lbnRzXFxDZXNpdW1HbG9iZS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuXHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDZXNpdW1HbG9iZSgpIHtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgLy8gTWFrZSBzdXJlIENlc2l1bSBpcyBsb2FkZWRcclxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiIHx8ICF3aW5kb3cuQ2VzaXVtKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJDZXNpdW0gaXMgbm90IGxvYWRlZFwiKVxyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBDZXNpdW0gPSB3aW5kb3cuQ2VzaXVtXHJcblxyXG4gICAgLy8gWW91ciBDZXNpdW0gdG9rZW4gc2hvdWxkIGJlIHNldCBoZXJlXHJcbiAgICBDZXNpdW0uSW9uLmRlZmF1bHRBY2Nlc3NUb2tlbiA9XHJcbiAgICAgIFwiZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnFkR2tpT2lKbE1EVTVOVE14T0Mwek5XRmxMVFF6WkdVdE9HSmlZeTB3WVdRd1kyWmlaRGxqTkRZaUxDSnBaQ0k2TWpreE1EWTJMQ0pwWVhRaU9qRTNORE00TXpreU1UVjkuTFB2UmJVaERXTS1RNHczQUxuVjRHNzRmR05pSHFGVkJXTjhpQ1UxQXZWQVwiXHJcbiAgICAvLyBJbml0aWFsaXplIHRoZSBDZXNpdW0gdmlld2VyXHJcbiAgICBjb25zdCB2aWV3ZXIgPSBuZXcgQ2VzaXVtLlZpZXdlcihcImNlc2l1bUNvbnRhaW5lclwiLCB7XHJcbiAgICAgIHRlcnJhaW46IENlc2l1bS5UZXJyYWluLmZyb21Xb3JsZFRlcnJhaW4oKSxcclxuICAgICAgYW5pbWF0aW9uOiBmYWxzZSxcclxuICAgICAgYmFzZUxheWVyUGlja2VyOiBmYWxzZSxcclxuICAgICAgZnVsbHNjcmVlbkJ1dHRvbjogZmFsc2UsXHJcbiAgICAgIGdlb2NvZGVyOiBmYWxzZSxcclxuICAgICAgaG9tZUJ1dHRvbjogZmFsc2UsXHJcbiAgICAgIGluZm9Cb3g6IGZhbHNlLFxyXG4gICAgICBzY2VuZU1vZGVQaWNrZXI6IGZhbHNlLFxyXG4gICAgICBzZWxlY3Rpb25JbmRpY2F0b3I6IGZhbHNlLFxyXG4gICAgICB0aW1lbGluZTogZmFsc2UsXHJcbiAgICAgIG5hdmlnYXRpb25IZWxwQnV0dG9uOiBmYWxzZSxcclxuICAgICAgbmF2aWdhdGlvbkluc3RydWN0aW9uc0luaXRpYWxseVZpc2libGU6IGZhbHNlLFxyXG4gICAgICBpbWFnZXJ5UHJvdmlkZXI6IG5ldyBDZXNpdW0uSW9uSW1hZ2VyeVByb3ZpZGVyKHsgYXNzZXRJZDogMyB9KSwgLy8gTmF0dXJhbCBFYXJ0aCBJSVxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBSZW1vdmUgdGhlIENlc2l1bSBsb2dvIGFuZCBjcmVkaXRzIGNvbnRhaW5lclxyXG4gICAgdmlld2VyLmNlc2l1bVdpZGdldC5jcmVkaXRDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXHJcblxyXG4gICAgLy8gU2V0IHRoZSBpbml0aWFsIGNhbWVyYSB0byBsb29rIGF0IEVhcnRoXHJcbiAgICB2aWV3ZXIuc2NlbmUuY2FtZXJhLnNldFZpZXcoe1xyXG4gICAgICBkZXN0aW5hdGlvbjogQ2VzaXVtLkNhcnRlc2lhbjMuZnJvbURlZ3JlZXMoMTAuMCwgNDUuMCwgMTAwMDAwMDAuMCksXHJcbiAgICAgIG9yaWVudGF0aW9uOiB7XHJcbiAgICAgICAgaGVhZGluZzogQ2VzaXVtLk1hdGgudG9SYWRpYW5zKDApLFxyXG4gICAgICAgIHBpdGNoOiBDZXNpdW0uTWF0aC50b1JhZGlhbnMoLTkwKSxcclxuICAgICAgfSxcclxuICAgIH0pXHJcblxyXG4gICAgLy8gQWRkIENlc2l1bSBPU00gYnVpbGRpbmdzIHRvIHRoZSBzY2VuZVxyXG4gICAgYXN5bmMgZnVuY3Rpb24gYWRkT3NtQnVpbGRpbmdzKCkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG9zbUJ1aWxkaW5nc1RpbGVzZXQgPSBhd2FpdCBDZXNpdW0uY3JlYXRlT3NtQnVpbGRpbmdzQXN5bmMoKVxyXG4gICAgICAgIHZpZXdlci5zY2VuZS5wcmltaXRpdmVzLmFkZChvc21CdWlsZGluZ3NUaWxlc2V0KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2FkaW5nIE9TTSBCdWlsZGluZ3M6XCIsIGVycm9yKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYWRkT3NtQnVpbGRpbmdzKClcclxuXHJcbiAgICAvLyBBZGQgYXV0by1yb3RhdGlvbiBmb3IgdGhlIGdsb2JlXHJcbiAgICB2aWV3ZXIuY2xvY2sub25UaWNrLmFkZEV2ZW50TGlzdGVuZXIoKCkgPT4ge1xyXG4gICAgICB2aWV3ZXIuc2NlbmUuY2FtZXJhLnJvdGF0ZShDZXNpdW0uQ2FydGVzaWFuMy5VTklUX1osIDAuMDAwNSlcclxuICAgIH0pXHJcblxyXG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaWYgKHZpZXdlciAmJiAhdmlld2VyLmlzRGVzdHJveWVkKCkpIHtcclxuICAgICAgICB2aWV3ZXIuZGVzdHJveSgpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LCBbXSlcclxuXHJcbiAgcmV0dXJuIDxkaXYgaWQ9XCJjZXNpdW1Db250YWluZXJcIiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIsIGhlaWdodDogXCIxMDB2aFwiIH19PjwvZGl2PlxyXG59XHJcblxyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwiQ2VzaXVtR2xvYmUiLCJ3aW5kb3ciLCJDZXNpdW0iLCJjb25zb2xlIiwiZXJyb3IiLCJJb24iLCJkZWZhdWx0QWNjZXNzVG9rZW4iLCJ2aWV3ZXIiLCJWaWV3ZXIiLCJ0ZXJyYWluIiwiVGVycmFpbiIsImZyb21Xb3JsZFRlcnJhaW4iLCJhbmltYXRpb24iLCJiYXNlTGF5ZXJQaWNrZXIiLCJmdWxsc2NyZWVuQnV0dG9uIiwiZ2VvY29kZXIiLCJob21lQnV0dG9uIiwiaW5mb0JveCIsInNjZW5lTW9kZVBpY2tlciIsInNlbGVjdGlvbkluZGljYXRvciIsInRpbWVsaW5lIiwibmF2aWdhdGlvbkhlbHBCdXR0b24iLCJuYXZpZ2F0aW9uSW5zdHJ1Y3Rpb25zSW5pdGlhbGx5VmlzaWJsZSIsImltYWdlcnlQcm92aWRlciIsIklvbkltYWdlcnlQcm92aWRlciIsImFzc2V0SWQiLCJjZXNpdW1XaWRnZXQiLCJjcmVkaXRDb250YWluZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJzY2VuZSIsImNhbWVyYSIsInNldFZpZXciLCJkZXN0aW5hdGlvbiIsIkNhcnRlc2lhbjMiLCJmcm9tRGVncmVlcyIsIm9yaWVudGF0aW9uIiwiaGVhZGluZyIsIk1hdGgiLCJ0b1JhZGlhbnMiLCJwaXRjaCIsImFkZE9zbUJ1aWxkaW5ncyIsIm9zbUJ1aWxkaW5nc1RpbGVzZXQiLCJjcmVhdGVPc21CdWlsZGluZ3NBc3luYyIsInByaW1pdGl2ZXMiLCJhZGQiLCJjbG9jayIsIm9uVGljayIsImFkZEV2ZW50TGlzdGVuZXIiLCJyb3RhdGUiLCJVTklUX1oiLCJpc0Rlc3Ryb3llZCIsImRlc3Ryb3kiLCJkaXYiLCJpZCIsIndpZHRoIiwiaGVpZ2h0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/CesiumGlobe.jsx\n"));

/***/ })

});
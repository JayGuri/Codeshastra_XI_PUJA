"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_components_CesiumGlobe_jsx"],{

/***/ "(app-pages-browser)/./components/CesiumGlobe.jsx":
/*!************************************!*\
  !*** ./components/CesiumGlobe.jsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CesiumGlobe)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction CesiumGlobe() {\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const viewerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CesiumGlobe.useEffect\": ()=>{\n            // Make sure we're in the browser\n            if (false) {}\n            // Function to load Cesium script dynamically\n            const loadCesium = {\n                \"CesiumGlobe.useEffect.loadCesium\": ()=>{\n                    return new Promise({\n                        \"CesiumGlobe.useEffect.loadCesium\": (resolve)=>{\n                            if (window.Cesium) {\n                                resolve(window.Cesium);\n                                return;\n                            }\n                            // If Cesium is not loaded yet, create script tag\n                            const script = document.createElement(\"script\");\n                            script.src = \"https://cesium.com/downloads/cesiumjs/releases/1.104/Build/Cesium/Cesium.js\";\n                            script.async = true;\n                            script.onload = ({\n                                \"CesiumGlobe.useEffect.loadCesium\": ()=>{\n                                    // Also load CSS\n                                    const link = document.createElement(\"link\");\n                                    link.rel = \"stylesheet\";\n                                    link.href = \"https://cesium.com/downloads/cesiumjs/releases/1.104/Build/Cesium/Widgets/widgets.css\";\n                                    document.head.appendChild(link);\n                                    // Wait a bit to make sure everything is initialized\n                                    setTimeout({\n                                        \"CesiumGlobe.useEffect.loadCesium\": ()=>resolve(window.Cesium)\n                                    }[\"CesiumGlobe.useEffect.loadCesium\"], 500);\n                                }\n                            })[\"CesiumGlobe.useEffect.loadCesium\"];\n                            document.head.appendChild(script);\n                        }\n                    }[\"CesiumGlobe.useEffect.loadCesium\"]);\n                }\n            }[\"CesiumGlobe.useEffect.loadCesium\"];\n            // Initialize Cesium\n            const initCesium = {\n                \"CesiumGlobe.useEffect.initCesium\": async ()=>{\n                    try {\n                        const Cesium = await loadCesium();\n                        // Set your Cesium Ion access token\n                        Cesium.Ion.defaultAccessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlMDU5NTMxOC0zNWFlLTQzZGUtOGJiYy0wYWQwY2ZiZDljNDYiLCJpZCI6MjkxMDY2LCJpYXQiOjE3NDM4MzkyMTV9.LPvRbUhDWM-Q4w3ALnV4G74fGNiHqFVBWN8iCU1AvVA\";\n                        // Check if viewer already exists\n                        if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n                            return;\n                        }\n                        // Initialize the Cesium viewer\n                        const cesiumViewer = new Cesium.Viewer(containerRef.current, {\n                            terrain: Cesium.Terrain.fromWorldTerrain(),\n                            animation: false,\n                            baseLayerPicker: false,\n                            fullscreenButton: false,\n                            geocoder: false,\n                            homeButton: false,\n                            infoBox: false,\n                            sceneModePicker: false,\n                            selectionIndicator: false,\n                            timeline: false,\n                            navigationHelpButton: false,\n                            navigationInstructionsInitiallyVisible: false,\n                            imageryProvider: new Cesium.IonImageryProvider({\n                                assetId: 3\n                            })\n                        });\n                        // Remove the Cesium logo and credits container\n                        if (cesiumViewer.cesiumWidget) {\n                            cesiumViewer.cesiumWidget.creditContainer.style.display = \"none\";\n                        }\n                        // Set the initial camera to look at Earth\n                        cesiumViewer.scene.camera.setView({\n                            destination: Cesium.Cartesian3.fromDegrees(10.0, 45.0, 10000000.0),\n                            orientation: {\n                                heading: Cesium.Math.toRadians(0),\n                                pitch: Cesium.Math.toRadians(-90)\n                            }\n                        });\n                        // Enable globe interaction\n                        cesiumViewer.scene.screenSpaceCameraController.enableRotate = true;\n                        cesiumViewer.scene.screenSpaceCameraController.enableTranslate = true;\n                        cesiumViewer.scene.screenSpaceCameraController.enableZoom = true;\n                        cesiumViewer.scene.screenSpaceCameraController.enableTilt = true;\n                        cesiumViewer.scene.screenSpaceCameraController.enableLook = true;\n                        // Store the viewer in ref\n                        viewerRef.current = cesiumViewer;\n                        // Add OSM buildings after a short delay to ensure the scene is ready\n                        setTimeout({\n                            \"CesiumGlobe.useEffect.initCesium\": async ()=>{\n                                try {\n                                    if (cesiumViewer && cesiumViewer.scene && cesiumViewer.scene.primitives) {\n                                        const osmBuildingsTileset = await Cesium.createOsmBuildingsAsync();\n                                        if (osmBuildingsTileset) {\n                                            cesiumViewer.scene.primitives.add(osmBuildingsTileset);\n                                        }\n                                    }\n                                } catch (error) {\n                                    console.error(\"Error loading OSM Buildings:\", error);\n                                }\n                            }\n                        }[\"CesiumGlobe.useEffect.initCesium\"], 2000);\n                    } catch (error) {\n                        console.error(\"Error initializing Cesium:\", error);\n                    }\n                }\n            }[\"CesiumGlobe.useEffect.initCesium\"];\n            // Start initialization\n            initCesium();\n            // Cleanup function\n            return ({\n                \"CesiumGlobe.useEffect\": ()=>{\n                    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n                        viewerRef.current.destroy();\n                        viewerRef.current = null;\n                    }\n                }\n            })[\"CesiumGlobe.useEffect\"];\n        }\n    }[\"CesiumGlobe.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        id: \"cesiumContainer\",\n        style: {\n            width: \"100%\",\n            height: \"100vh\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Jay Manish Guri\\\\OneDrive\\\\Desktop\\\\pujacs\\\\frontend\\\\components\\\\CesiumGlobe.jsx\",\n        lineNumber: 126,\n        columnNumber: 10\n    }, this);\n}\n_s(CesiumGlobe, \"fIhuk9Ndxx9/CsLTvYxiTuYVpVI=\");\n_c = CesiumGlobe;\nvar _c;\n$RefreshReg$(_c, \"CesiumGlobe\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/CesiumGlobe.jsx\n"));

/***/ })

}]);